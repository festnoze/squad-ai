{
    "file_path": "C:/Dev/squad-ai/CodeSharpDoc/inputs/code_files_generated/Studi.Api.Lms.Messenger/Controllers/Contact/ContactController.cs",
    "index_shift_code": 653,
    "struct_type": "Class",
    "namespace_name": "Studi.Api.Lms.Messenger.Controllers.Contact",
    "usings": [
        "Microsoft.AspNetCore.Authorization",
        "Microsoft.AspNetCore.Mvc",
        "Studi.Api.Lms.Messenger.Application.Services.ContactService",
        "Studi.Api.Lms.Messenger.Controllers.Contact.Mapping",
        "Studi.Api.Lms.Messenger.ExchangeDataContract.v1.Contact.ResponseModel",
        "Studi.Api.Lms.Messenger.Shared.ContactListing",
        "Studi.Api.Core.ListingSelector",
        "Studi.Api.Core.ListingSelector.Untyped",
        "Swashbuckle.AspNetCore.Annotations",
        "System.Net"
    ],
    "access_modifier": "public",
    "struct_name": "ContactController",
    "base_class_name": "ControllerBase",
    "interfaces_names": [],
    "related_structures": [],
    "methods": [
        {
            "name": "PostSearchContactsAsync",
            "code_start_index": 1906,
            "method_name": "PostSearchContactsAsync",
            "existing_summary": "\r\n        /// <summary>\r\n        /// Searches and retrieves paginated contacts based on the provided listing selector.\r\n        /// </summary>\r\n        /// <param name=\"listingSelector\">The listing selector for filtering and sorting contacts.</param>\r\n        /// <param name=\"userId\">The user ID for whom contacts are searched.</param>\r\n        /// <param name=\"schoolIds\">The list of school IDs for filtering contacts.</param>\r\n        /// <returns>Paginated data of contact response models.</returns>\r\n        ",
            "attributes": null,
            "return_type": null,
            "params": [
                {
                    "name": "listingSelector",
                    "param_name": "listingSelector",
                    "param_type": "IListingSelector<IContactListing>",
                    "has_default_value": false,
                    "default_value": "",
                    "description": null,
                    "extra_infos": null
                },
                {
                    "name": "userId",
                    "param_name": "userId",
                    "param_type": "int",
                    "has_default_value": false,
                    "default_value": "",
                    "description": null,
                    "extra_infos": null
                },
                {
                    "name": "schoolIds",
                    "param_name": "schoolIds",
                    "param_type": "List<int>",
                    "has_default_value": false,
                    "default_value": "",
                    "description": null,
                    "extra_infos": null
                }
            ],
            "indent_level": 2,
            "code": "{\r\n            HttpContext.Request.Headers.TryGetValue(\"Origin\", out var originValue);\r\n            Uri.TryCreate(originValue, UriKind.Absolute, out var uri);\r\n\r\n            var untypedListingSelector = listingSelector.ConvertToUntypedListingSelector();\r\n\r\n            var paginatedDataAto = await _contactService.SearchPaginatedContactsAsync(userId, schoolIds, untypedListingSelector, uri?.Host);\r\n\r\n            var paginatedData = new PaginedData<ContactResponseModel>\r\n            {\r\n                Data = paginatedDataAto.Data.Select(c => c.ToResponseModel()),\r\n                PageNumber = paginatedDataAto.PageNumber,\r\n                PageSize = paginatedDataAto.PageSize,\r\n                Total = paginatedDataAto.Total,\r\n            };\r\n\r\n            return paginatedData;\r\n        }",
            "is_async": true,
            "is_task": true,
            "is_ctor": false,
            "is_static": false,
            "is_abstract": false,
            "is_override": false,
            "is_virtual": false,
            "is_sealed": false,
            "is_new": false,
            "_code_chunks": null,
            "generated_summary": "Search and retrieve paginated contact data based on specified criteria and user ID.",
            "generated_parameters_summaries": {
                "params_list": [
                    {
                        "name": "listingSelector",
                        "param_name": "listingSelector",
                        "param_desc": "The listing selector of type IListingSelector<IContactListing> to specify the criteria for listing contacts."
                    },
                    {
                        "name": "userId",
                        "param_name": "userId",
                        "param_desc": "The user ID of type int to identify the user whose contacts are being searched."
                    },
                    {
                        "name": "schoolIds",
                        "param_name": "schoolIds",
                        "param_desc": "The list of school IDs of type List<int> to filter contacts based on specific schools."
                    }
                ]
            },
            "generated_return_summary": null,
            "generated_xml_summary": "/// <summary>\n/// Search and retrieve paginated contact data based on specified criteria and user ID.\n/// </summary>\n/// <param name=\"listingSelector\">The listing selector of type IListingSelector<IContactListing> to specify the criteria for listing contacts.</param>\n/// <param name=\"userId\">The user ID of type int to identify the user whose contacts are being searched.</param>\n/// <param name=\"schoolIds\">The list of school IDs of type List<int> to filter contacts based on specific schools.</param>\n",
            "code_chunks": null
        }
    ],
    "properties": [],
    "name": "ContactController"
}