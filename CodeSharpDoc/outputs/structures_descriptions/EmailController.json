{
    "file_path": "C:/Dev/squad-ai/CodeSharpDoc/inputs/code_files_generated/Studi.Api.Lms.User/Controllers/Email/EmailController.cs",
    "index_shift_code": 226,
    "struct_type": "Class",
    "namespace_name": "",
    "usings": [
        "Microsoft.AspNetCore.Mvc",
        "Studi.Api.Core.Security.Authentication",
        "Studi.Api.Lms.User.Application.Interfaces",
        "Swashbuckle.AspNetCore.Annotations"
    ],
    "access_modifier": "public",
    "struct_name": "EmailController",
    "base_class_name": "ControllerWithAuthenticationBase",
    "interfaces_names": [],
    "related_structures": [],
    "methods": [
        {
            "name": "ExistAsync",
            "code_start_index": 888,
            "method_name": "ExistAsync",
            "existing_summary": "\r\n    ",
            "attributes": null,
            "return_type": null,
            "params": [
                {
                    "name": "email",
                    "param_name": "email",
                    "param_type": "string",
                    "has_default_value": false,
                    "default_value": "",
                    "description": null,
                    "extra_infos": null
                }
            ],
            "indent_level": 1,
            "code": "{\r\n        if (!User.StudiIdentity().IsIntranetUser)\r\n            return Unauthorized(\"Only intranet user can access to this endpoint\");\r\n\r\n        var exist = await _userQueryingService.ExistUserByEmailAsync(email);\r\n        return Ok(exist);\r\n    }",
            "is_async": true,
            "is_task": true,
            "is_ctor": false,
            "is_static": false,
            "is_abstract": false,
            "is_override": false,
            "is_virtual": false,
            "is_sealed": false,
            "is_new": false,
            "_code_chunks": null,
            "generated_summary": "Check if a user exists by email and return a response based on the user's intranet status.",
            "generated_parameters_summaries": {
                "params_list": [
                    {
                        "name": "email",
                        "param_name": "email",
                        "param_desc": "The email address of the user to check for existence."
                    }
                ]
            },
            "generated_return_summary": null,
            "generated_xml_summary": "/// <summary>\n/// Check if a user exists by email and return a response based on the user's intranet status.\n/// </summary>\n/// <param name=\"email\">The email address of the user to check for existence.</param>\n",
            "code_chunks": null
        }
    ],
    "properties": [],
    "name": "EmailController"
}