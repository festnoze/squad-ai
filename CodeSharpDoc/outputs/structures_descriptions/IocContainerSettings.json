{
    "file_path": "C:/Dev/squad-ai/CodeSharpDoc/inputs/code_files_generated/Studi.Api.Lms.User/StartupSettings/IocContainerSettings.cs",
    "index_shift_code": 451,
    "struct_type": "Class",
    "namespace_name": "",
    "usings": [],
    "access_modifier": "public static",
    "struct_name": "IocContainerSettings",
    "base_class_name": "",
    "interfaces_names": [],
    "related_structures": [],
    "methods": [
        {
            "name": "SetIocContainerDependencies",
            "code_start_index": 705,
            "method_name": "SetIocContainerDependencies",
            "existing_summary": "    /// <summary>\r\n    /// Declare concrete classes to use for interfaces instanciated using Dependancy Injection (IoC container)\r\n    /// </summary>\r\n    /// <param name=\"services\"></param>\r\n    ",
            "attributes": null,
            "return_type": null,
            "params": [
                {
                    "name": "services",
                    "param_name": "services",
                    "param_type": "IServiceCollection",
                    "has_default_value": false,
                    "default_value": "",
                    "description": null,
                    "extra_infos": null
                },
                {
                    "name": "resourceServerUrl",
                    "param_name": "resourceServerUrl",
                    "param_type": "string",
                    "has_default_value": false,
                    "default_value": "",
                    "description": null,
                    "extra_infos": null
                }
            ],
            "indent_level": 1,
            "code": "{\r\n        // Api.Core SERVICES\r\n        var apiCoreOptions = Options.Create(new ApiCoreServicesOptions(\r\n                            isUsingCqrsRequestWithMediator: true,\r\n                            isUsingDomainEventsWithMediator: true,\r\n                            isUsingCqrsRequestDataValidation: true));\r\n\r\n        services.AddApiCoreServices(apiCoreOptions);\r\n        services.AddStudiHealthChecks();\r\n\r\n        // SERVICES\r\n        services.AddApplicationServices(resourceServerUrl);\r\n        services.AddDomainServices();\r\n\r\n        // REPOSITORIES\r\n        services.AddInfrastructureServices();\r\n    }",
            "is_async": false,
            "is_task": false,
            "is_ctor": false,
            "is_static": true,
            "is_abstract": false,
            "is_override": false,
            "is_virtual": false,
            "is_sealed": false,
            "is_new": false,
            "_code_chunks": null,
            "generated_summary": "Configure the dependencies for the IoC container with various services and repositories.",
            "generated_parameters_summaries": {
                "params_list": [
                    {
                        "name": "services",
                        "param_name": "services",
                        "param_desc": "IServiceCollection: The collection of services available in the application, used for registering dependencies."
                    },
                    {
                        "name": "resourceServerUrl",
                        "param_name": "resourceServerUrl",
                        "param_desc": "string: The URL of the resource server that will be used for authentication and authorization."
                    }
                ]
            },
            "generated_return_summary": null,
            "generated_xml_summary": "/// <summary>\n/// Configure the dependencies for the IoC container with various services and repositories.\n/// </summary>\n/// <param name=\"services\">IServiceCollection: The collection of services available in the application, used for registering dependencies.</param>\n/// <param name=\"resourceServerUrl\">string: The URL of the resource server that will be used for authentication and authorization.</param>\n",
            "code_chunks": null
        },
        {
            "name": "SetIocExternalContainerDependencies",
            "code_start_index": 1437,
            "method_name": "SetIocExternalContainerDependencies",
            "existing_summary": "\r\n    ",
            "attributes": null,
            "return_type": null,
            "params": [
                {
                    "name": "services",
                    "param_name": "services",
                    "param_type": "IServiceCollection",
                    "has_default_value": false,
                    "default_value": "",
                    "description": null,
                    "extra_infos": null
                },
                {
                    "name": "jwtKey",
                    "param_name": "jwtKey",
                    "param_type": "string",
                    "has_default_value": false,
                    "default_value": "",
                    "description": null,
                    "extra_infos": null
                },
                {
                    "name": "urlAPIUnified",
                    "param_name": "urlAPIUnified",
                    "param_type": "string",
                    "has_default_value": false,
                    "default_value": "",
                    "description": null,
                    "extra_infos": null
                }
            ],
            "indent_level": 1,
            "code": "{\r\n        // SERVICES (EXTERNAL CLIENTS)\r\n        services.AddApplicationExternalServices(jwtKey, urlAPIUnified);\r\n    }",
            "is_async": false,
            "is_task": false,
            "is_ctor": false,
            "is_static": true,
            "is_abstract": false,
            "is_override": false,
            "is_virtual": false,
            "is_sealed": false,
            "is_new": false,
            "_code_chunks": null,
            "generated_summary": "Add external services dependencies to the IoC container for use in the application.",
            "generated_parameters_summaries": {
                "params_list": [
                    {
                        "name": "services",
                        "param_name": "services",
                        "param_desc": "An instance of the IServiceCollection interface which is used to register services in the IoC container."
                    },
                    {
                        "name": "jwtKey",
                        "param_name": "jwtKey",
                        "param_desc": "A string representing the key used for JWT (JSON Web Token) generation and validation."
                    },
                    {
                        "name": "urlAPIUnified",
                        "param_name": "urlAPIUnified",
                        "param_desc": "A string containing the URL of the unified API endpoint to be used by the application."
                    }
                ]
            },
            "generated_return_summary": null,
            "generated_xml_summary": "/// <summary>\n/// Add external services dependencies to the IoC container for use in the application.\n/// </summary>\n/// <param name=\"services\">An instance of the IServiceCollection interface which is used to register services in the IoC container.</param>\n/// <param name=\"jwtKey\">A string representing the key used for JWT (JSON Web Token) generation and validation.</param>\n/// <param name=\"urlAPIUnified\">A string containing the URL of the unified API endpoint to be used by the application.</param>\n",
            "code_chunks": null
        }
    ],
    "properties": [],
    "name": "IocContainerSettings"
}