{
    "file_path": "C:/Dev/squad-ai/CodeSharpDoc/inputs/code_files_generated/Studi.Api.Lms.User/Decorators/TransformTextFromMappingDecorator.cs",
    "index_shift_code": 48,
    "struct_type": "Class",
    "namespace_name": "Studi.Api.Lms.User.Decorators",
    "usings": [],
    "access_modifier": "public",
    "struct_name": "TransformTextFromMappingDecorator",
    "base_class_name": "TransformTextDecorator",
    "interfaces_names": [],
    "related_structures": [],
    "methods": [
        {
            "name": "Transform",
            "code_start_index": 368,
            "method_name": "Transform",
            "existing_summary": "\r\n        ",
            "attributes": null,
            "return_type": null,
            "params": [
                {
                    "name": "text",
                    "param_name": "text",
                    "param_type": "string?",
                    "has_default_value": false,
                    "default_value": "",
                    "description": null,
                    "extra_infos": null
                }
            ],
            "indent_level": 2,
            "code": "{\r\n            text = base.Transform(text);\r\n            return text is not null && _mapping.ContainsKey(text) ? _mapping[text] : text;\r\n        }",
            "is_async": false,
            "is_task": false,
            "is_ctor": false,
            "is_static": false,
            "is_abstract": false,
            "is_override": true,
            "is_virtual": false,
            "is_sealed": false,
            "is_new": false,
            "_code_chunks": null,
            "generated_summary": "Transform the input text based on a mapping dictionary, returning the corresponding value if it exists, otherwise return the original text.",
            "generated_parameters_summaries": {
                "params_list": [
                    {
                        "name": "string?",
                        "param_name": "string?",
                        "param_desc": "The name of the parameter (it's always a single word. Also exclude the type of the parameter which may come firstly)"
                    },
                    {
                        "name": "text",
                        "param_name": "text",
                        "param_desc": "The generated description for the parameter"
                    }
                ]
            },
            "generated_return_summary": null,
            "generated_xml_summary": "/// <summary>\n/// Transform the input text based on a mapping dictionary, returning the corresponding value if it exists, otherwise return the original text.\n/// </summary>\n/// <param name=\"string?\">The name of the parameter (it's always a single word. Also exclude the type of the parameter which may come firstly)</param>\n/// <param name=\"text\">The generated description for the parameter</param>\n",
            "code_chunks": null
        }
    ],
    "properties": [],
    "name": "TransformTextFromMappingDecorator"
}