{
    "file_path": "C:/Dev/squad-ai/CodeSharpDoc/inputs/code_files_generated/V21/CoursesV21Controller.cs",
    "index_shift_code": 316,
    "struct_type": "Class",
    "namespace_name": "LMS.Controllers.V21",
    "usings": [
        "System",
        "System.Data.Entity",
        "System.Linq",
        "System.Threading.Tasks",
        "System.Web.Http",
        "LMS.Attributes",
        "LMS.Attributes.Routing",
        "LMS.Authentication",
        "LMS.Controllers.V3",
        "LMS.Data",
        "LMS.Utils",
        "Serilog"
    ],
    "access_modifier": "public",
    "struct_name": "CoursesV21Controller",
    "base_class_name": "ApiController",
    "interfaces_names": [],
    "related_structures": [],
    "methods": [
        {
            "name": "SetProgressAsync",
            "code_start_index": 718,
            "method_name": "SetProgressAsync",
            "existing_summary": "\r\n        ",
            "attributes": null,
            "return_type": null,
            "params": [
                {
                    "name": "progress",
                    "param_name": "progress",
                    "param_type": "MedialibProgress",
                    "has_default_value": false,
                    "default_value": "",
                    "description": null,
                    "extra_infos": null
                },
                {
                    "name": "resources",
                    "param_name": "resources",
                    "param_type": "int[]",
                    "has_default_value": false,
                    "default_value": "",
                    "description": null,
                    "extra_infos": null
                }
            ],
            "indent_level": 2,
            "code": "{\r\n            var userId = User.Identity.GetUserId();\r\n            var ecoleId = User.Identity.GetSchoolId();\r\n            var distinctResources = resources.Distinct().ToArray();\r\n\r\n            var nonEvalResources = await _db.Ressources.AsNoTracking()\r\n                .Include(r => r.ResourcesCategory)\r\n                .Where(r => distinctResources.Contains(r.Id) && r.ResourcesCategory.Code != \"DEVOIRS\")\r\n                .Select(r => r.Id)\r\n                .ToListAsync();\r\n\r\n            var existingProgressItems = await _db.UserProgresses\r\n                .Where(up => nonEvalResources.Contains(up.ResourceId) && up.UserId == userId)\r\n                .ToListAsync();\r\n\r\n            switch (progress)\r\n            {\r\n                case MedialibProgress.Todo:\r\n                    _db.UserProgresses.RemoveRange(existingProgressItems);\r\n                    break;\r\n\r\n                case MedialibProgress.Doing:\r\n                    existingProgressItems.ForEach(up => up.Progress = 1);\r\n                    var newDoingItems = nonEvalResources\r\n                        .Where(resourceId => existingProgressItems.All(up => up.ResourceId != resourceId))\r\n                        .Select(resourceId => new UserProgress\r\n                        {\r\n                            UserId = userId,\r\n                            SchoolId = ecoleId,\r\n                            ResourceId = resourceId,\r\n                            Progress = 1\r\n                        }).ToList();\r\n                    _db.UserProgresses.AddRange(newDoingItems);\r\n                    break;\r\n\r\n                case MedialibProgress.Done:\r\n                    existingProgressItems.ForEach(up => up.Progress = 100);\r\n                    var newDoneItems = nonEvalResources\r\n                        .Where(resourceId => existingProgressItems.All(up => up.ResourceId != resourceId))\r\n                        .Select(resourceId => new UserProgress\r\n                        {\r\n                            UserId = userId,\r\n                            SchoolId = ecoleId,\r\n                            ResourceId = resourceId,\r\n                            Progress = 100\r\n                        }).ToList();\r\n                    _db.UserProgresses.AddRange(newDoneItems);\r\n                    break;\r\n\r\n                default:\r\n                    return Ok();\r\n            }\r\n\r\n            try\r\n            {\r\n                await _db.SaveChangesAsync();\r\n                return Ok();\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                Log.Error(ex, \"Erreur lors de la suppression des info des progress info\");\r\n                return InternalServerError();\r\n            }\r\n        }",
            "is_async": true,
            "is_task": true,
            "is_ctor": false,
            "is_static": false,
            "is_abstract": false,
            "is_override": false,
            "is_virtual": false,
            "is_sealed": false,
            "is_new": false,
            "_code_chunks": null,
            "generated_summary": "Check if two objects are equal based on their id and libelle attributes.",
            "generated_parameters_summaries": {
                "params_list": [
                    {
                        "name": "progress",
                        "param_name": "progress",
                        "param_desc": "The MedialibProgress parameter represents the progress of the operation."
                    },
                    {
                        "name": "resources",
                        "param_name": "resources",
                        "param_desc": "The resources parameter is an array of integers representing the resources involved in the operation."
                    }
                ]
            },
            "generated_return_summary": null,
            "generated_xml_summary": "/// <summary>\n/// Check if two objects are equal based on their id and libelle attributes.\n/// </summary>\n/// <param name=\"progress\">The MedialibProgress parameter represents the progress of the operation.</param>\n/// <param name=\"resources\">The resources parameter is an array of integers representing the resources involved in the operation.</param>\n",
            "code_chunks": null
        }
    ],
    "properties": [],
    "name": "CoursesV21Controller"
}