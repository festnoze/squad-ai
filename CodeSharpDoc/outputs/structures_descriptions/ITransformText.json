{
    "file_path": "C:/Dev/squad-ai/CodeSharpDoc/inputs/code_files_generated/Studi.Api.Lms.User/Decorators/ITransformText.cs",
    "index_shift_code": 44,
    "struct_type": "Interface",
    "namespace_name": "",
    "usings": [],
    "access_modifier": "public",
    "struct_name": "ITransformText",
    "base_class_name": "",
    "interfaces_names": [],
    "related_structures": [
        {
            "file_path": "C:/Dev/squad-ai/CodeSharpDoc/inputs/code_files_generated/Studi.Api.Lms.User/Decorators/TransformTextDecorator.cs",
            "index_shift_code": 48,
            "struct_type": "Class",
            "namespace_name": "Studi.Api.Lms.User.Decorators",
            "usings": [],
            "access_modifier": "public abstract",
            "struct_name": "TransformTextDecorator",
            "base_class_name": "",
            "interfaces_names": [
                "ITransformText"
            ],
            "related_structures": [],
            "methods": [
                {
                    "name": "SetTranformText",
                    "code_start_index": 185,
                    "method_name": "SetTranformText",
                    "existing_summary": "\r\n        ",
                    "attributes": null,
                    "return_type": null,
                    "params": [
                        {
                            "name": "transformText",
                            "param_name": "transformText",
                            "param_type": "ITransformText",
                            "has_default_value": false,
                            "default_value": "",
                            "description": null,
                            "extra_infos": null
                        }
                    ],
                    "indent_level": 2,
                    "code": "{\r\n            this._transformText = transformText;\r\n        }",
                    "is_async": false,
                    "is_task": false,
                    "is_ctor": false,
                    "is_static": false,
                    "is_abstract": false,
                    "is_override": false,
                    "is_virtual": false,
                    "is_sealed": false,
                    "is_new": false,
                    "_code_chunks": null,
                    "generated_summary": "Set the transform text function for further use.",
                    "generated_parameters_summaries": {
                        "params_list": [
                            {
                                "name": "ITransformText",
                                "param_name": "ITransformText",
                                "param_desc": "The name of the parameter (it's always a single word. Also exclude the type of the parameter which may come firstly)"
                            },
                            {
                                "name": "transformText",
                                "param_name": "transformText",
                                "param_desc": "The generated description for the parameter"
                            }
                        ]
                    },
                    "generated_return_summary": null,
                    "generated_xml_summary": "/// <summary>\n/// Set the transform text function for further use.\n/// </summary>\n/// <param name=\"ITransformText\">The name of the parameter (it's always a single word. Also exclude the type of the parameter which may come firstly)</param>\n/// <param name=\"transformText\">The generated description for the parameter</param>\n",
                    "code_chunks": null
                },
                {
                    "name": "Transform",
                    "code_start_index": 334,
                    "method_name": "Transform",
                    "existing_summary": "\r\n        ",
                    "attributes": null,
                    "return_type": null,
                    "params": [
                        {
                            "name": "text",
                            "param_name": "text",
                            "param_type": "string?",
                            "has_default_value": false,
                            "default_value": "",
                            "description": null,
                            "extra_infos": null
                        }
                    ],
                    "indent_level": 2,
                    "code": "{\r\n            if (this._transformText is not null)\r\n                return this._transformText!.Transform(text);\r\n\r\n            return text;\r\n        }",
                    "is_async": false,
                    "is_task": false,
                    "is_ctor": false,
                    "is_static": false,
                    "is_abstract": false,
                    "is_override": false,
                    "is_virtual": true,
                    "is_sealed": false,
                    "is_new": false,
                    "_code_chunks": null,
                    "generated_summary": "Apply a transformation to a given text if a transformation function is available, otherwise return the text as is.",
                    "generated_parameters_summaries": {
                        "params_list": [
                            {
                                "name": "string?",
                                "param_name": "string?",
                                "param_desc": "The name of the parameter (it's always a single word. Also exclude the type of the parameter which may come firstly)"
                            },
                            {
                                "name": "text",
                                "param_name": "text",
                                "param_desc": "The generated description for the parameter"
                            }
                        ]
                    },
                    "generated_return_summary": null,
                    "generated_xml_summary": "/// <summary>\n/// Apply a transformation to a given text if a transformation function is available, otherwise return the text as is.\n/// </summary>\n/// <param name=\"string?\">The name of the parameter (it's always a single word. Also exclude the type of the parameter which may come firstly)</param>\n/// <param name=\"text\">The generated description for the parameter</param>\n",
                    "code_chunks": null
                }
            ],
            "properties": [],
            "name": "TransformTextDecorator"
        },
        {
            "file_path": "C:/Dev/squad-ai/CodeSharpDoc/inputs/code_files_generated/Studi.Api.Lms.User/Decorators/TransformTextToLower.cs",
            "index_shift_code": 44,
            "struct_type": "Class",
            "namespace_name": "",
            "usings": [],
            "access_modifier": "public",
            "struct_name": "TransformTextToLower",
            "base_class_name": "",
            "interfaces_names": [
                "ITransformText"
            ],
            "related_structures": [],
            "methods": [
                {
                    "name": "Transform",
                    "code_start_index": 109,
                    "method_name": "Transform",
                    "existing_summary": "    ",
                    "attributes": null,
                    "return_type": null,
                    "params": [
                        {
                            "name": "text",
                            "param_name": "text",
                            "param_type": "string?",
                            "has_default_value": false,
                            "default_value": "",
                            "description": null,
                            "extra_infos": null
                        }
                    ],
                    "indent_level": 1,
                    "code": "{\r\n        return text?.ToLower();\r\n    }",
                    "is_async": false,
                    "is_task": false,
                    "is_ctor": false,
                    "is_static": false,
                    "is_abstract": false,
                    "is_override": false,
                    "is_virtual": false,
                    "is_sealed": false,
                    "is_new": false,
                    "_code_chunks": null,
                    "generated_summary": "Convert the input text to lowercase.",
                    "generated_parameters_summaries": {
                        "params_list": [
                            {
                                "name": "string",
                                "param_name": "string",
                                "param_desc": "The input text that will be transformed to lowercase."
                            },
                            {
                                "name": "text",
                                "param_name": "text",
                                "param_desc": "Optional parameter. Additional text that can be included for transformation along with the main input text."
                            }
                        ]
                    },
                    "generated_return_summary": null,
                    "generated_xml_summary": "/// <summary>\n/// Convert the input text to lowercase.\n/// </summary>\n/// <param name=\"string\">The input text that will be transformed to lowercase.</param>\n/// <param name=\"text\">Optional parameter. Additional text that can be included for transformation along with the main input text.</param>\n",
                    "code_chunks": null
                }
            ],
            "properties": [],
            "name": "TransformTextToLower"
        }
    ],
    "methods": [
        {
            "name": "Transform",
            "code_start_index": 83,
            "method_name": "Transform",
            "existing_summary": "    ",
            "attributes": null,
            "return_type": null,
            "params": [
                {
                    "name": "text",
                    "param_name": "text",
                    "param_type": "string?",
                    "has_default_value": false,
                    "default_value": "",
                    "description": null,
                    "extra_infos": null
                }
            ],
            "indent_level": 1,
            "code": "",
            "is_async": false,
            "is_task": false,
            "is_ctor": false,
            "is_static": false,
            "is_abstract": false,
            "is_override": false,
            "is_virtual": false,
            "is_sealed": false,
            "is_new": false,
            "_code_chunks": null,
            "generated_summary": "Apply a transformation to a given text if a transformation function is available, otherwise return the text as is.",
            "generated_parameters_summaries": {
                "params_list": [
                    {
                        "name": "string?",
                        "param_name": "string?",
                        "param_desc": "The name of the parameter (it's always a single word. Also exclude the type of the parameter which may come firstly)"
                    },
                    {
                        "name": "text",
                        "param_name": "text",
                        "param_desc": "The generated description for the parameter"
                    }
                ]
            },
            "generated_return_summary": null,
            "generated_xml_summary": "/// <summary>\n/// Apply a transformation to a given text if a transformation function is available, otherwise return the text as is.\n/// </summary>\n/// <param name=\"string?\">The name of the parameter (it's always a single word. Also exclude the type of the parameter which may come firstly)</param>\n/// <param name=\"text\">The generated description for the parameter</param>\n",
            "code_chunks": null
        }
    ],
    "properties": [],
    "name": "ITransformText"
}