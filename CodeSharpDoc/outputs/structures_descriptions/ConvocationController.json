{
    "file_path": "C:/Dev/squad-ai/CodeSharpDoc/inputs/code_files_generated/Studi.Api.Lms.User/Controllers/ConvocationController.cs",
    "index_shift_code": 295,
    "struct_type": "Class",
    "namespace_name": "",
    "usings": [],
    "access_modifier": "public partial",
    "struct_name": "ConvocationController",
    "base_class_name": "ControllerWithAuthenticationBase",
    "interfaces_names": [],
    "related_structures": [],
    "methods": [
        {
            "name": "GetUserConvocationsAsync",
            "code_start_index": 959,
            "method_name": "GetUserConvocationsAsync",
            "existing_summary": "\r\n    ",
            "attributes": null,
            "return_type": null,
            "params": [],
            "indent_level": 1,
            "code": "{\r\n        var convocations = await _convocationQueryingService.GetUserConvocationsByIdAsync(User.StudiIdentity().LmsUserId);\r\n        return convocations.ToResponseModel();\r\n    }",
            "is_async": true,
            "is_task": true,
            "is_ctor": false,
            "is_static": false,
            "is_abstract": false,
            "is_override": false,
            "is_virtual": false,
            "is_sealed": false,
            "is_new": false,
            "_code_chunks": null,
            "generated_summary": "Retrieve the convocations for the current user asynchronously.",
            "generated_parameters_summaries": {
                "params_list": [
                    {
                        "name": "no",
                        "param_name": "no",
                        "param_desc": "no parameters"
                    },
                    {
                        "name": "methodName",
                        "param_name": "methodName",
                        "param_desc": "The name of the method being called (e.g., 'GetUserConvocationsAsync')."
                    },
                    {
                        "name": "methodPurpose",
                        "param_name": "methodPurpose",
                        "param_desc": "The purpose of the method being called (e.g., 'Retrieve the convocations for the current user asynchronously.')."
                    }
                ]
            },
            "generated_return_summary": null,
            "generated_xml_summary": "/// <summary>\n/// Retrieve the convocations for the current user asynchronously.\n/// </summary>\n/// <param name=\"no\">no parameters</param>\n/// <param name=\"methodName\">The name of the method being called (e.g., 'GetUserConvocationsAsync').</param>\n/// <param name=\"methodPurpose\">The purpose of the method being called (e.g., 'Retrieve the convocations for the current user asynchronously.').</param>\n",
            "code_chunks": null
        },
        {
            "name": "GetConvocationFileByIdAsync",
            "code_start_index": 1422,
            "method_name": "GetConvocationFileByIdAsync",
            "existing_summary": "\r\n    ",
            "attributes": null,
            "return_type": null,
            "params": [
                {
                    "name": "convocationId",
                    "param_name": "convocationId",
                    "param_type": "int",
                    "has_default_value": false,
                    "default_value": "",
                    "description": null,
                    "extra_infos": null
                }
            ],
            "indent_level": 1,
            "code": "{\r\n        var fileUrl = await _convocationQueryingService.GetConvocationUrlFileByIdAsync(User.StudiIdentity().LmsUserId, convocationId);\r\n\r\n        using (var client = new HttpClient())\r\n        {\r\n            var response = await client.SendAsync(new HttpRequestMessage()\r\n            {\r\n                RequestUri = new Uri(fileUrl),\r\n                Method = HttpMethod.Get\r\n            });\r\n\r\n            var stream = await response.Content.ReadAsStreamAsync();\r\n\r\n            return File(stream, \"application/pdf\");\r\n        }\r\n    }",
            "is_async": true,
            "is_task": true,
            "is_ctor": false,
            "is_static": false,
            "is_abstract": false,
            "is_override": false,
            "is_virtual": false,
            "is_sealed": false,
            "is_new": false,
            "_code_chunks": null,
            "generated_summary": "Retrieve a convocation file by its ID asynchronously.",
            "generated_parameters_summaries": {
                "params_list": [
                    {
                        "name": "convocationId",
                        "param_name": "convocationId",
                        "param_desc": "The ID of the convocation for which the file will be retrieved."
                    }
                ]
            },
            "generated_return_summary": null,
            "generated_xml_summary": "/// <summary>\n/// Retrieve a convocation file by its ID asynchronously.\n/// </summary>\n/// <param name=\"convocationId\">The ID of the convocation for which the file will be retrieved.</param>\n",
            "code_chunks": null
        }
    ],
    "properties": [],
    "name": "ConvocationController"
}