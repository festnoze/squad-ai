{
    "file_path": "C:/Dev/squad-ai/CodeSharpDoc/inputs/code_files_generated/Studi.Api.Lms.User/Controllers/NotificationController.cs",
    "index_shift_code": 295,
    "struct_type": "Class",
    "namespace_name": "",
    "usings": [],
    "access_modifier": "public partial",
    "struct_name": "NotificationController",
    "base_class_name": "ControllerWithAuthenticationBase",
    "interfaces_names": [],
    "related_structures": [],
    "methods": [
        {
            "name": "GetUserNotificationsUnreadByIdAsync",
            "code_start_index": 979,
            "method_name": "GetUserNotificationsUnreadByIdAsync",
            "existing_summary": "\r\n    ",
            "attributes": null,
            "return_type": null,
            "params": [],
            "indent_level": 1,
            "code": "{\r\n        var userNotifications = await _notificationQueryingService.GetUserNotificationsUnreadByIdAsync(User.StudiIdentity().LmsUserId);\r\n        return userNotifications.ToResponseModel();\r\n    }",
            "is_async": true,
            "is_task": true,
            "is_ctor": false,
            "is_static": false,
            "is_abstract": false,
            "is_override": false,
            "is_virtual": false,
            "is_sealed": false,
            "is_new": false,
            "_code_chunks": null,
            "generated_summary": "Retrieve unread notifications for a specific user ID asynchronously.",
            "generated_parameters_summaries": {
                "params_list": [
                    {
                        "name": "userId",
                        "param_name": "userId",
                        "param_desc": "The ID of the user for whom to retrieve unread notifications asynchronously."
                    }
                ]
            },
            "generated_return_summary": null,
            "generated_xml_summary": "/// <summary>\n/// Retrieve unread notifications for a specific user ID asynchronously.\n/// </summary>\n/// <param name=\"userId\">The ID of the user for whom to retrieve unread notifications asynchronously.</param>\n",
            "code_chunks": null
        }
    ],
    "properties": [],
    "name": "NotificationController"
}