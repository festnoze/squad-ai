[project]
name = "skillforge-api"
version = "0.0.1"
description = "this is the backend API for the skillforge project to provide the students with one-to-one learning tutor help"
authors = [{ name = "Etienne MILLERIOUX", email = "etienne.millerioux@studi.fr" }]
readme = "README.md"
keywords = ['python']
requires-python = ">=3.9,<4.0"
classifiers = [
    "Intended Audience :: Developers",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "fastapi>=0.118.0",
    "uvicorn[standard]>=0.37.0",
    "python-dotenv>=1.0.0",
    "sqlalchemy>=2.0.43",
    "pydantic[email]>=2.11.10",
    "lagom>=2.7.7",
    "pytest>=8.4.2",
    "pytest-asyncio>=1.2.0",
    "PyJWT>=2.8.0",
    "selenium>=4.36.0",
    "beautifulsoup4>=4.14.2",
    "markdownify>=1.2.0",
    "pdfminer-six>=20250506",
]

[project.urls]
Homepage = "https://https://studi-ai@dev.azure.com/studi-ai/Skillforge/_git/ai-commun-tools.github.io/skillforge-api/"
Repository = "https://github.com/https://studi-ai@dev.azure.com/studi-ai/Skillforge/_git/ai-commun-tools/skillforge-api"
Documentation = "https://https://studi-ai@dev.azure.com/studi-ai/Skillforge/_git/ai-commun-tools.github.io/skillforge-api/"

[dependency-groups]
dev = [
    "pytest>=7.2.0",
    "pre-commit>=2.20.0",
    "tox-uv>=1.11.3",
    "deptry>=0.23.0",
    "mypy>=0.991",
    "pytest-cov>=4.0.0",
    "ruff>=0.11.5",
    "mkdocs>=1.4.2",
    "mkdocs-material>=8.5.10",
    "mkdocstrings[python]>=0.26.1",
]

[tool.uv]
# UV configuration for environment-specific installations

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/skillforge_api"]

[tool.mypy]
files = ["src"]
mypy_path = "src"
explicit_package_bases = true
disallow_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
warn_unused_ignores = true
show_error_codes = true

[tool.ruff]
line-length = 220
target-version = "py312"

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"
pythonpath = ["src"]

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["src"]

[tool.pylint.messages_control]
disable = ["C0301", "R0903"]

[tool.ruff.lint]
select = ["E", "F", "W", "I"]  # Enable specific rule sets
ignore = ["E501", "E402", "I001", "W293", "TRY003", "C901"]  # Ignore specific rules

[tool.ruff.format]
quote-style = "double"
