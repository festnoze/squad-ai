{"version":3,"file":"charts-5d9fdb22.js","sources":["../../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../../node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","../../node_modules/@babel/runtime/helpers/esm/extends.js","../../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../../node_modules/@kurkle/color/dist/color.esm.js","../../node_modules/chart.js/dist/chunks/helpers.dataset.js","../../node_modules/chart.js/dist/chart.js","../../node_modules/react-chartjs-2/dist/index.js","../../node_modules/chartjs-chart-financial/dist/chartjs-chart-financial.esm.js","../../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../../node_modules/chartjs-adapter-date-fns/dist/chartjs-adapter-date-fns.esm.js"],"sourcesContent":["function _setPrototypeOf(t, e) {\n  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n    return t.__proto__ = e, t;\n  }, _setPrototypeOf(t, e);\n}\nexport { _setPrototypeOf as default };","import setPrototypeOf from \"./setPrototypeOf.js\";\nfunction _inheritsLoose(t, o) {\n  t.prototype = Object.create(o.prototype), t.prototype.constructor = t, setPrototypeOf(t, o);\n}\nexport { _inheritsLoose as default };","function _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\nexport { _extends as default };","function _objectWithoutPropertiesLoose(r, e) {\n  if (null == r) return {};\n  var t = {};\n  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {\n    if (-1 !== e.indexOf(n)) continue;\n    t[n] = r[n];\n  }\n  return t;\n}\nexport { _objectWithoutPropertiesLoose as default };","/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.5.0\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || value === undefined;\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\n/**\n * Verifies that attempting to coerce n to string or number won't throw a TypeError.\n */ function isNonPrimitive(n) {\n    return typeof n === 'symbol' || typeof n === 'object' && n !== null && !(Symbol.toPrimitive in n || 'toString' in n || 'valueOf' in n);\n}\nfunction isNumber(n) {\n    return !isNonPrimitive(n) && !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , vScale , _parsed  } = meta;\n        const spanGaps = meta.dataset ? meta.dataset.options ? meta.dataset.options.spanGaps : null : null;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo);\n            if (spanGaps) {\n                const distanceToDefinedLo = _parsed.slice(0, start + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                start -= Math.max(0, distanceToDefinedLo);\n            }\n            start = _limitValue(start, 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            let end = Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1);\n            if (spanGaps) {\n                const distanceToDefinedHi = _parsed.slice(end - 1).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                end += Math.max(0, distanceToDefinedHi);\n            }\n            count = _limitValue(end, start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    if (!ctx && !canvas) {\n        return;\n    }\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nfunction getDatasetClipArea(chart, meta) {\n    const clip = meta._clip;\n    if (clip.disabled) {\n        return false;\n    }\n    const area = getDatasetArea(meta, chart.chartArea);\n    return {\n        left: clip.left === false ? 0 : area.left - (clip.left === true ? 0 : clip.left),\n        right: clip.right === false ? chart.width : area.right + (clip.right === true ? 0 : clip.right),\n        top: clip.top === false ? 0 : area.top - (clip.top === true ? 0 : clip.top),\n        bottom: clip.bottom === false ? chart.height : area.bottom + (clip.bottom === true ? 0 : clip.bottom)\n    };\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, getStyle as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, getRtlAdapter as aA, overrideTextDirection as aB, _textX as aC, restoreTextDirection as aD, drawPointLegend as aE, distanceBetweenPoints as aF, noop as aG, _setMinAndMaxByKey as aH, niceNum as aI, almostWhole as aJ, almostEquals as aK, _decimalPlaces as aL, Ticks as aM, log10 as aN, _longestText as aO, _filterBetween as aP, _lookup as aQ, isPatternOrGradient as aR, getHoverColor as aS, clone as aT, _merger as aU, _mergerIf as aV, _deprecated as aW, _splitKey as aX, toFontString as aY, splineCurve as aZ, splineCurveMonotone as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, getDatasetClipArea as ah, _elementsEqual as ai, _isClickEvent as aj, _isBetween as ak, _normalizeAngle as al, _readValueToProps as am, _updateBezierControlPoints as an, _computeSegments as ao, _boundSegments as ap, _steppedInterpolation as aq, _bezierInterpolation as ar, _pointInLine as as, _steppedLineTo as at, _bezierCurveTo as au, drawPoint as av, addRoundedRectPath as aw, toTRBL as ax, toTRBLCorners as ay, _boundSegment as az, isArray as b, fontString as b0, toLineHeight as b1, PITAU as b2, INFINITY as b3, RAD_PER_DEG as b4, QUARTER_PI as b5, TWO_THIRDS_PI as b6, _angleDiff as b7, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.dataset.js.map\n","/*!\n * Chart.js v4.5.0\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as getDatasetClipArea, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _normalizeAngle, am as _readValueToProps, an as _updateBezierControlPoints, ao as _computeSegments, ap as _boundSegments, aq as _steppedInterpolation, ar as _bezierInterpolation, as as _pointInLine, at as _steppedLineTo, au as _bezierCurveTo, av as drawPoint, aw as addRoundedRectPath, ax as toTRBL, ay as toTRBLCorners, az as _boundSegment, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as distanceBetweenPoints, aG as noop, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as Ticks, aN as log10, aO as _longestText, aP as _filterBetween, aQ as _lookup } from './chunks/helpers.dataset.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    let found = false;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            found = true;\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    if (!found && !options.all) {\n        return 0;\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n            meta._stacked = isStacked(meta.vScale, meta);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n        const iScaleValue = currentParsed && currentParsed[iScale.axis];\n        const skipNull = (meta)=>{\n            const parsed = meta._parsed.find((item)=>item[iScale.axis] === iScaleValue);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n    _getAxisCount() {\n        return this._getAxis().length;\n    }\n    getFirstScaleIdForIndexAxis() {\n        const scales = this.chart.scales;\n        const indexScaleId = this.chart.options.indexAxis;\n        return Object.keys(scales).filter((key)=>scales[key].axis === indexScaleId).shift();\n    }\n    _getAxis() {\n        const axis = {};\n        const firstScaleAxisId = this.getFirstScaleIdForIndexAxis();\n        for (const dataset of this.chart.data.datasets){\n            axis[valueOrDefault(this.chart.options.indexAxis === 'x' ? dataset.xAxisID : dataset.yAxisID, firstScaleAxisId)] = true;\n        }\n        return Object.keys(axis);\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        const axisCount = this._getAxisCount();\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount * axisCount) : computeFitCategoryTraits(index, ruler, options, stackCount * axisCount);\n            const axisID = this.chart.options.indexAxis === 'x' ? this.getDataset().xAxisID : this.getDataset().yAxisID;\n            const axisNumber = this._getAxis().indexOf(valueOrDefault(axisID, this.getFirstScaleIdForIndexAxis()));\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined) + axisNumber;\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    const spanGaps = metaset.dataset ? metaset.dataset.options ? metaset.dataset.options.spanGaps : null : null;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            const result = lookupMethod(data, axis, value);\n            if (spanGaps) {\n                const { vScale  } = controller._cachedMeta;\n                const { _parsed  } = metaset;\n                const distanceToDefinedLo = _parsed.slice(0, result.lo + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.lo -= Math.max(0, distanceToDefinedLo);\n                const distanceToDefinedHi = _parsed.slice(result.hi).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.hi += Math.max(0, distanceToDefinedHi);\n            }\n            return result;\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.5.0\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resizeBeforeDraw = null;\n            this._resize(width, height);\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        const clip = getDatasetClipArea(this, meta);\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (clip) {\n            clipArea(ctx, clip);\n        }\n        meta.controller.draw();\n        if (clip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipSelf(ctx, element, endAngle) {\n    const { startAngle , x , y , outerRadius , innerRadius , options  } = element;\n    const { borderWidth , borderJoinStyle  } = options;\n    const outerAngleClip = Math.min(borderWidth / outerRadius, _normalizeAngle(startAngle - endAngle));\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius - borderWidth / 2, startAngle + outerAngleClip / 2, endAngle - outerAngleClip / 2);\n    if (innerRadius > 0) {\n        const innerAngleClip = Math.min(borderWidth / innerRadius, _normalizeAngle(startAngle - endAngle));\n        ctx.arc(x, y, innerRadius + borderWidth / 2, endAngle - innerAngleClip / 2, startAngle + innerAngleClip / 2, true);\n    } else {\n        const clipWidth = Math.min(borderWidth / 2, outerRadius * _normalizeAngle(startAngle - endAngle));\n        if (borderJoinStyle === 'round') {\n            ctx.arc(x, y, clipWidth, endAngle - PI / 2, startAngle + PI / 2, true);\n        } else if (borderJoinStyle === 'bevel') {\n            const r = 2 * clipWidth * clipWidth;\n            const endX = -r * Math.cos(endAngle + PI / 2) + x;\n            const endY = -r * Math.sin(endAngle + PI / 2) + y;\n            const startX = r * Math.cos(startAngle + PI / 2) + x;\n            const startY = r * Math.sin(startAngle + PI / 2) + y;\n            ctx.lineTo(endX, endY);\n            ctx.lineTo(startX, startY);\n        }\n    }\n    ctx.closePath();\n    ctx.moveTo(0, 0);\n    ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    ctx.clip('evenodd');\n}\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset , borderRadius  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (options.selfJoin && endAngle - startAngle >= PI && borderRadius === 0 && borderJoinStyle !== 'miter') {\n        clipSelf(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true,\n        selfJoin: false\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n        const betweenAngles = _circumference >= TAU || nonZeroBetween;\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nfunction containsDefaultColorsDefenitions() {\n    return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        const containsColorDefenition = containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements) || containsDefaultColorsDefenitions();\n        if (!options.forceOverride && containsColorDefenition) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { chart , index , line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    const meta = chart.getDatasetMeta(index);\n    const clip = getDatasetClipArea(chart, meta);\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis,\n            clip\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale , clip  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    let fillColor = below;\n    if (below !== above) {\n        if (property === 'x') {\n            clipVertical(ctx, target, area.top);\n            fill(ctx, {\n                line,\n                target,\n                color: above,\n                scale,\n                property,\n                clip\n            });\n            ctx.restore();\n            ctx.save();\n            clipVertical(ctx, target, area.bottom);\n        } else if (property === 'y') {\n            clipHorizontal(ctx, target, area.left);\n            fill(ctx, {\n                line,\n                target,\n                color: below,\n                scale,\n                property,\n                clip\n            });\n            ctx.restore();\n            ctx.save();\n            clipHorizontal(ctx, target, area.right);\n            fillColor = above;\n        }\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: fillColor,\n        scale,\n        property,\n        clip\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction clipHorizontal(ctx, target, clipX) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(clipX, firstPoint.y);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(clipX, lastPoint.y);\n        }\n    }\n    ctx.lineTo(clipX, target.first().y);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale , clip  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, clip, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, clip, bounds) {\n    const chartArea = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x' || property === 'y') {\n        let left, top, right, bottom;\n        if (property === 'x') {\n            left = start;\n            top = chartArea.top;\n            right = end;\n            bottom = chartArea.bottom;\n        } else {\n            left = chartArea.left;\n            top = start;\n            right = chartArea.right;\n            bottom = end;\n        }\n        ctx.beginPath();\n        if (clip) {\n            left = Math.max(left, clip.left);\n            right = Math.min(right, clip.right);\n            top = Math.max(top, clip.top);\n            bottom = Math.min(bottom, clip.bottom);\n        }\n        ctx.rect(left, top, right - left, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        if (count === 0 || xSet.size === 0) {\n            return false;\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash || []);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import React, { forwardRef, useRef, useEffect } from 'react';\nimport { Chart as Chart$1, LineController, BarController, RadarController, DoughnutController, PolarAreaController, BubbleController, PieController, ScatterController } from 'chart.js';\n\nconst defaultDatasetIdKey = 'label';\nfunction reforwardRef(ref, value) {\n    if (typeof ref === 'function') {\n        ref(value);\n    } else if (ref) {\n        ref.current = value;\n    }\n}\nfunction setOptions(chart, nextOptions) {\n    const options = chart.options;\n    if (options && nextOptions) {\n        Object.assign(options, nextOptions);\n    }\n}\nfunction setLabels(currentData, nextLabels) {\n    currentData.labels = nextLabels;\n}\nfunction setDatasets(currentData, nextDatasets) {\n    let datasetIdKey = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : defaultDatasetIdKey;\n    const addedDatasets = [];\n    currentData.datasets = nextDatasets.map((nextDataset)=>{\n        // given the new set, find it's current match\n        const currentDataset = currentData.datasets.find((dataset)=>dataset[datasetIdKey] === nextDataset[datasetIdKey]);\n        // There is no original to update, so simply add new one\n        if (!currentDataset || !nextDataset.data || addedDatasets.includes(currentDataset)) {\n            return {\n                ...nextDataset\n            };\n        }\n        addedDatasets.push(currentDataset);\n        Object.assign(currentDataset, nextDataset);\n        return currentDataset;\n    });\n}\nfunction cloneData(data) {\n    let datasetIdKey = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : defaultDatasetIdKey;\n    const nextData = {\n        labels: [],\n        datasets: []\n    };\n    setLabels(nextData, data.labels);\n    setDatasets(nextData, data.datasets, datasetIdKey);\n    return nextData;\n}\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getDatasetAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event.nativeEvent, 'dataset', {\n        intersect: true\n    }, false);\n}\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event.nativeEvent, 'nearest', {\n        intersect: true\n    }, false);\n}\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementsAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event.nativeEvent, 'index', {\n        intersect: true\n    }, false);\n}\n\nfunction ChartComponent(props, ref) {\n    const { height = 150, width = 300, redraw = false, datasetIdKey, type, data, options, plugins = [], fallbackContent, updateMode, ...canvasProps } = props;\n    const canvasRef = useRef(null);\n    const chartRef = useRef(null);\n    const renderChart = ()=>{\n        if (!canvasRef.current) return;\n        chartRef.current = new Chart$1(canvasRef.current, {\n            type,\n            data: cloneData(data, datasetIdKey),\n            options: options && {\n                ...options\n            },\n            plugins\n        });\n        reforwardRef(ref, chartRef.current);\n    };\n    const destroyChart = ()=>{\n        reforwardRef(ref, null);\n        if (chartRef.current) {\n            chartRef.current.destroy();\n            chartRef.current = null;\n        }\n    };\n    useEffect(()=>{\n        if (!redraw && chartRef.current && options) {\n            setOptions(chartRef.current, options);\n        }\n    }, [\n        redraw,\n        options\n    ]);\n    useEffect(()=>{\n        if (!redraw && chartRef.current) {\n            setLabels(chartRef.current.config.data, data.labels);\n        }\n    }, [\n        redraw,\n        data.labels\n    ]);\n    useEffect(()=>{\n        if (!redraw && chartRef.current && data.datasets) {\n            setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n        }\n    }, [\n        redraw,\n        data.datasets\n    ]);\n    useEffect(()=>{\n        if (!chartRef.current) return;\n        if (redraw) {\n            destroyChart();\n            setTimeout(renderChart);\n        } else {\n            chartRef.current.update(updateMode);\n        }\n    }, [\n        redraw,\n        options,\n        data.labels,\n        data.datasets,\n        updateMode\n    ]);\n    useEffect(()=>{\n        if (!chartRef.current) return;\n        destroyChart();\n        setTimeout(renderChart);\n    }, [\n        type\n    ]);\n    useEffect(()=>{\n        renderChart();\n        return ()=>destroyChart();\n    }, []);\n    return /*#__PURE__*/ React.createElement(\"canvas\", {\n        ref: canvasRef,\n        role: \"img\",\n        height: height,\n        width: width,\n        ...canvasProps\n    }, fallbackContent);\n}\nconst Chart = /*#__PURE__*/ forwardRef(ChartComponent);\n\nfunction createTypedChart(type, registerables) {\n    Chart$1.register(registerables);\n    return /*#__PURE__*/ forwardRef((props, ref)=>/*#__PURE__*/ React.createElement(Chart, {\n            ...props,\n            ref: ref,\n            type: type\n        }));\n}\nconst Line = /* #__PURE__ */ createTypedChart('line', LineController);\nconst Bar = /* #__PURE__ */ createTypedChart('bar', BarController);\nconst Radar = /* #__PURE__ */ createTypedChart('radar', RadarController);\nconst Doughnut = /* #__PURE__ */ createTypedChart('doughnut', DoughnutController);\nconst PolarArea = /* #__PURE__ */ createTypedChart('polarArea', PolarAreaController);\nconst Bubble = /* #__PURE__ */ createTypedChart('bubble', BubbleController);\nconst Pie = /* #__PURE__ */ createTypedChart('pie', PieController);\nconst Scatter = /* #__PURE__ */ createTypedChart('scatter', ScatterController);\n\nexport { Bar, Bubble, Chart, Doughnut, Line, Pie, PolarArea, Radar, Scatter, getDatasetAtEvent, getElementAtEvent, getElementsAtEvent };\n//# sourceMappingURL=index.js.map\n","/*!\n * @license\n * chartjs-chart-financial\n * http://chartjs.org/\n * Version: 0.2.1\n *\n * Copyright 2024 Chart.js Contributors\n * Released under the MIT license\n * https://github.com/chartjs/chartjs-chart-financial/blob/master/LICENSE.md\n */\nimport { BarElement, Chart, BarController, defaults as defaults$1 } from 'chart.js';\nimport { valueOrDefault, isNullOrUndef, clipArea, unclipArea } from 'chart.js/helpers';\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {Rectangle} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'low', 'high', 'width', 'height'], useFinalPosition);\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base); // use min because 0 pixel at top of screen\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const bounds = !bar || (skipX && skipY) ? false : getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\n\nclass FinancialElement extends BarElement {\n\n  static defaults = {\n    backgroundColors: {\n      up: 'rgba(75, 192, 192, 0.5)',\n      down: 'rgba(255, 99, 132, 0.5)',\n      unchanged: 'rgba(201, 203, 207, 0.5)',\n    },\n    borderColors: {\n      up: 'rgb(75, 192, 192)',\n      down: 'rgb(255, 99, 132)',\n      unchanged: 'rgb(201, 203, 207)',\n    }\n  };\n\n  height() {\n    return this.base - this.y;\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, low, high} = this.getProps(['x', 'low', 'high'], useFinalPosition);\n    return {\n      x,\n      y: (high + low) / 2\n    };\n  }\n\n  tooltipPosition(useFinalPosition) {\n    const {x, open, close} = this.getProps(['x', 'open', 'close'], useFinalPosition);\n    return {\n      x,\n      y: (open + close) / 2\n    };\n  }\n}\n\nconst defaults = Chart.defaults;\n\nclass OhlcElement extends FinancialElement {\n  static id = 'ohlc';\n\n  static defaults = {\n    ...FinancialElement.defaults,\n    lineWidth: 2,\n    armLength: null,\n    armLengthRatio: 0.8\n  };\n\n  draw(ctx) {\n    const me = this;\n\n    const {x, open, high, low, close} = me;\n\n    const armLengthRatio = valueOrDefault(me.armLengthRatio, defaults.elements.ohlc.armLengthRatio);\n    let armLength = valueOrDefault(me.armLength, defaults.elements.ohlc.armLength);\n    if (armLength === null) {\n      // The width of an ohlc is affected by barPercentage and categoryPercentage\n      // This behavior is caused by extending controller.financial, which extends controller.bar\n      // barPercentage and categoryPercentage are now set to 1.0 (see controller.ohlc)\n      // and armLengthRatio is multipled by 0.5,\n      // so that when armLengthRatio=1.0, the arms from neighbour ohcl touch,\n      // and when armLengthRatio=0.0, ohcl are just vertical lines.\n      armLength = me.width * armLengthRatio * 0.5;\n    }\n\n    if (close < open) {\n      ctx.strokeStyle = valueOrDefault(me.options.borderColors ? me.options.borderColors.up : undefined, defaults.elements.ohlc.borderColors.up);\n    } else if (close > open) {\n      ctx.strokeStyle = valueOrDefault(me.options.borderColors ? me.options.borderColors.down : undefined, defaults.elements.ohlc.borderColors.down);\n    } else {\n      ctx.strokeStyle = valueOrDefault(me.options.borderColors ? me.options.borderColors.unchanged : undefined, defaults.elements.ohlc.borderColors.unchanged);\n    }\n    ctx.lineWidth = valueOrDefault(me.lineWidth, defaults.elements.ohlc.lineWidth);\n\n    ctx.beginPath();\n    ctx.moveTo(x, high);\n    ctx.lineTo(x, low);\n    ctx.moveTo(x - armLength, open);\n    ctx.lineTo(x, open);\n    ctx.moveTo(x + armLength, close);\n    ctx.lineTo(x, close);\n    ctx.stroke();\n  }\n}\n\n/**\n * This class is based off controller.bar.js from the upstream Chart.js library\n */\nclass FinancialController extends BarController {\n\n  static overrides = {\n    label: '',\n\n    parsing: false,\n\n    hover: {\n      mode: 'label'\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'open', 'high', 'low', 'close']\n      }\n    },\n\n    scales: {\n      x: {\n        type: 'timeseries',\n        offset: true,\n        ticks: {\n          major: {\n            enabled: true,\n          },\n          source: 'data',\n          maxRotation: 0,\n          autoSkip: true,\n          autoSkipPadding: 75,\n          sampleSize: 100\n        },\n      },\n      y: {\n        type: 'linear'\n      }\n    },\n\n    plugins: {\n      tooltip: {\n        intersect: false,\n        mode: 'index',\n        callbacks: {\n          label(ctx) {\n            const point = ctx.parsed;\n\n            if (!isNullOrUndef(point.y)) {\n              return defaults$1.plugins.tooltip.callbacks.label(ctx);\n            }\n\n            const {o, h, l, c} = point;\n\n            return `O: ${o}  H: ${h}  L: ${l}  C: ${c}`;\n          }\n        }\n      }\n    }\n  };\n\n  getLabelAndValue(index) {\n    const me = this;\n    const parsed = me.getParsed(index);\n    const axis = me._cachedMeta.iScale.axis;\n\n    const {o, h, l, c} = parsed;\n    const value = `O: ${o}  H: ${h}  L: ${l}  C: ${c}`;\n\n    return {\n      label: `${me._cachedMeta.iScale.getLabelForValue(parsed[axis])}`,\n      value\n    };\n  }\n\n  getUserBounds(scale) {\n    const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n    return {\n      min: minDefined ? min : Number.NEGATIVE_INFINITY,\n      max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n  }\n\n  /**\n   * Implement this ourselves since it doesn't handle high and low values\n   * https://github.com/chartjs/Chart.js/issues/7328\n   * @protected\n   */\n  getMinMax(scale) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const axis = meta.iScale.axis;\n    const otherScale = this._getOtherScale(scale);\n    const {min: otherMin, max: otherMax} = this.getUserBounds(otherScale);\n\n    if (_parsed.length < 2) {\n      return {min: 0, max: 1};\n    }\n\n    if (scale === meta.iScale) {\n      return {min: _parsed[0][axis], max: _parsed[_parsed.length - 1][axis]};\n    }\n\n    const newParsedData = _parsed.filter(({x}) => x >= otherMin && x < otherMax);\n\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    for (let i = 0; i < newParsedData.length; i++) {\n      const data = newParsedData[i];\n      min = Math.min(min, data.l);\n      max = Math.max(max, data.h);\n    }\n    return {min, max};\n  }\n\n  /**\n   * @protected\n   */\n  calculateElementProperties(index, ruler, reset, options) {\n    const me = this;\n    const vscale = me._cachedMeta.vScale;\n    const base = vscale.getBasePixel();\n    const ipixels = me._calculateBarIndexPixels(index, ruler, options);\n    const data = me.chart.data.datasets[me.index].data[index];\n    const open = vscale.getPixelForValue(data.o);\n    const high = vscale.getPixelForValue(data.h);\n    const low = vscale.getPixelForValue(data.l);\n    const close = vscale.getPixelForValue(data.c);\n\n    return {\n      base: reset ? base : low,\n      x: ipixels.center,\n      y: (low + high) / 2,\n      width: ipixels.size,\n      open,\n      high,\n      low,\n      close\n    };\n  }\n\n  draw() {\n    const me = this;\n    const chart = me.chart;\n    const rects = me._cachedMeta.data;\n    clipArea(chart.ctx, chart.chartArea);\n    for (let i = 0; i < rects.length; ++i) {\n      rects[i].draw(me._ctx);\n    }\n    unclipArea(chart.ctx);\n  }\n\n}\n\nclass OhlcController extends FinancialController {\n  static id = 'ohlc';\n\n  static defaults = {\n    ...FinancialController.defaults,\n    dataElementType: OhlcElement.id,\n    datasets: {\n      barPercentage: 1.0,\n      categoryPercentage: 1.0\n    }\n  };\n\n  updateElements(elements, start, count, mode) {\n    const reset = mode === 'reset';\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const options = sharedOptions || this.resolveDataElementOptions(i, mode);\n\n      const baseProperties = this.calculateElementProperties(i, ruler, reset, options);\n\n      if (includeOptions) {\n        baseProperties.options = options;\n      }\n      this.updateElement(elements[i], i, baseProperties, mode);\n    }\n  }\n\n}\n\nclass CandlestickElement extends FinancialElement {\n  static id = 'candlestick';\n\n  static defaults = {\n    ...FinancialElement.defaults,\n    borderWidth: 1,\n  };\n\n  draw(ctx) {\n    const me = this;\n\n    const {x, open, high, low, close} = me;\n\n    let borderColors = me.options.borderColors;\n    if (typeof borderColors === 'string') {\n      borderColors = {\n        up: borderColors,\n        down: borderColors,\n        unchanged: borderColors\n      };\n    }\n\n    let borderColor;\n    if (close < open) {\n      borderColor = valueOrDefault(borderColors ? borderColors.up : undefined, defaults$1.elements.candlestick.borderColors.up);\n      ctx.fillStyle = valueOrDefault(me.options.backgroundColors ? me.options.backgroundColors.up : undefined, defaults$1.elements.candlestick.backgroundColors.up);\n    } else if (close > open) {\n      borderColor = valueOrDefault(borderColors ? borderColors.down : undefined, defaults$1.elements.candlestick.borderColors.down);\n      ctx.fillStyle = valueOrDefault(me.options.backgroundColors ? me.options.backgroundColors.down : undefined, defaults$1.elements.candlestick.backgroundColors.down);\n    } else {\n      borderColor = valueOrDefault(borderColors ? borderColors.unchanged : undefined, defaults$1.elements.candlestick.borderColors.unchanged);\n      ctx.fillStyle = valueOrDefault(me.backgroundColors ? me.backgroundColors.unchanged : undefined, defaults$1.elements.candlestick.backgroundColors.unchanged);\n    }\n\n    ctx.lineWidth = valueOrDefault(me.options.borderWidth, defaults$1.elements.candlestick.borderWidth);\n    ctx.strokeStyle = borderColor;\n\n    ctx.beginPath();\n    ctx.moveTo(x, high);\n    ctx.lineTo(x, Math.min(open, close));\n    ctx.moveTo(x, low);\n    ctx.lineTo(x, Math.max(open, close));\n    ctx.stroke();\n    ctx.fillRect(x - me.width / 2, close, me.width, open - close);\n    ctx.strokeRect(x - me.width / 2, close, me.width, open - close);\n    ctx.closePath();\n  }\n}\n\nclass CandlestickController extends FinancialController {\n\n  static id = 'candlestick';\n\n  static defaults = {\n    ...FinancialController.defaults,\n    dataElementType: CandlestickElement.id\n  };\n\n  static defaultRoutes = BarController.defaultRoutes;\n\n  updateElements(elements, start, count, mode) {\n    const reset = mode === 'reset';\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const options = sharedOptions || this.resolveDataElementOptions(i, mode);\n\n      const baseProperties = this.calculateElementProperties(i, ruler, reset, options);\n\n      if (includeOptions) {\n        baseProperties.options = options;\n      }\n      this.updateElement(elements[i], i, baseProperties, mode);\n    }\n  }\n\n}\n\nexport { CandlestickController, CandlestickElement, OhlcController, OhlcElement };\n","function _assertThisInitialized(e) {\n  if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  return e;\n}\nexport { _assertThisInitialized as default };","/*!\n * chartjs-adapter-date-fns v3.0.0\n * https://www.chartjs.org\n * (c) 2022 chartjs-adapter-date-fns Contributors\n * Released under the MIT license\n */\nimport { _adapters } from 'chart.js';\nimport { toDate, parse, parseISO, isValid, format, addYears, addQuarters, addMonths, addWeeks, addDays, addHours, addMinutes, addSeconds, addMilliseconds, differenceInYears, differenceInQuarters, differenceInMonths, differenceInWeeks, differenceInDays, differenceInHours, differenceInMinutes, differenceInSeconds, differenceInMilliseconds, startOfYear, startOfQuarter, startOfMonth, startOfWeek, startOfDay, startOfHour, startOfMinute, startOfSecond, endOfYear, endOfQuarter, endOfMonth, endOfWeek, endOfDay, endOfHour, endOfMinute, endOfSecond } from 'date-fns';\n\nconst FORMATS = {\n  datetime: 'MMM d, yyyy, h:mm:ss aaaa',\n  millisecond: 'h:mm:ss.SSS aaaa',\n  second: 'h:mm:ss aaaa',\n  minute: 'h:mm aaaa',\n  hour: 'ha',\n  day: 'MMM d',\n  week: 'PP',\n  month: 'MMM yyyy',\n  quarter: 'qqq - yyyy',\n  year: 'yyyy'\n};\n\n_adapters._date.override({\n  _id: 'date-fns', // DEBUG\n\n  formats: function() {\n    return FORMATS;\n  },\n\n  parse: function(value, fmt) {\n    if (value === null || typeof value === 'undefined') {\n      return null;\n    }\n    const type = typeof value;\n    if (type === 'number' || value instanceof Date) {\n      value = toDate(value);\n    } else if (type === 'string') {\n      if (typeof fmt === 'string') {\n        value = parse(value, fmt, new Date(), this.options);\n      } else {\n        value = parseISO(value, this.options);\n      }\n    }\n    return isValid(value) ? value.getTime() : null;\n  },\n\n  format: function(time, fmt) {\n    return format(time, fmt, this.options);\n  },\n\n  add: function(time, amount, unit) {\n    switch (unit) {\n    case 'millisecond': return addMilliseconds(time, amount);\n    case 'second': return addSeconds(time, amount);\n    case 'minute': return addMinutes(time, amount);\n    case 'hour': return addHours(time, amount);\n    case 'day': return addDays(time, amount);\n    case 'week': return addWeeks(time, amount);\n    case 'month': return addMonths(time, amount);\n    case 'quarter': return addQuarters(time, amount);\n    case 'year': return addYears(time, amount);\n    default: return time;\n    }\n  },\n\n  diff: function(max, min, unit) {\n    switch (unit) {\n    case 'millisecond': return differenceInMilliseconds(max, min);\n    case 'second': return differenceInSeconds(max, min);\n    case 'minute': return differenceInMinutes(max, min);\n    case 'hour': return differenceInHours(max, min);\n    case 'day': return differenceInDays(max, min);\n    case 'week': return differenceInWeeks(max, min);\n    case 'month': return differenceInMonths(max, min);\n    case 'quarter': return differenceInQuarters(max, min);\n    case 'year': return differenceInYears(max, min);\n    default: return 0;\n    }\n  },\n\n  startOf: function(time, unit, weekday) {\n    switch (unit) {\n    case 'second': return startOfSecond(time);\n    case 'minute': return startOfMinute(time);\n    case 'hour': return startOfHour(time);\n    case 'day': return startOfDay(time);\n    case 'week': return startOfWeek(time);\n    case 'isoWeek': return startOfWeek(time, {weekStartsOn: +weekday});\n    case 'month': return startOfMonth(time);\n    case 'quarter': return startOfQuarter(time);\n    case 'year': return startOfYear(time);\n    default: return time;\n    }\n  },\n\n  endOf: function(time, unit) {\n    switch (unit) {\n    case 'second': return endOfSecond(time);\n    case 'minute': return endOfMinute(time);\n    case 'hour': return endOfHour(time);\n    case 'day': return endOfDay(time);\n    case 'week': return endOfWeek(time);\n    case 'month': return endOfMonth(time);\n    case 'quarter': return endOfQuarter(time);\n    case 'year': return endOfYear(time);\n    default: return time;\n    }\n  }\n});\n"],"names":["_setPrototypeOf","t","e","_inheritsLoose","o","setPrototypeOf","_extends","n","r","_objectWithoutPropertiesLoose","round","v","lim","l","h","p2b","n2b","b2n","n2p","map$1","hex","h1","b","h2","eq","isShort","hexParse","str","len","ret","alpha","a","f","hexString","HUE_RE","hsl2rgbn","s","k","hsv2rgbn","hwb2rgbn","w","rgb","i","hueValue","g","d","max","rgb2hsl","min","calln","c","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","m","p1","p2","rotate","deg","hslString","map","names$1","unpack","unpacked","keys","tkeys","j","ok","nk","names","nameParse","RGB_RE","rgbParse","rgbString","to","from","interpolate","rgb1","rgb2","modHSL","ratio","tmp","clone","proto","fromObject","input","functionParse","Color","type","obj","color","weight","c1","c2","w2","p","w1","val","noop","uid","id","isNullOrUndef","value","isArray","isObject","isNumberFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","callback","fn","args","thisArg","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","source","target","klen","isValidKey","key","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","keyResolvers","_splitKey","parts","part","_getKeyResolver","resolveObjectKey","_capitalize","defined","isFunction","setsEqual","item","_isClickEvent","PI","TAU","PITAU","INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","x","y","epsilon","niceNum","range","roundedRange","niceRange","fraction","_factorize","result","sqrt","isNonPrimitive","isNumber","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","index","hi","lo","mid","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","method","base","res","object","unlistenArrayEvents","stub","listeners","_arrayUnique","items","set","requestAnimFrame","throttled","argsToUse","ticking","debounce","delay","timeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","iScale","vScale","_parsed","spanGaps","axis","minDefined","maxDefined","distanceToDefinedLo","point","distanceToDefinedHi","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","changed","atEdge","elasticIn","elasticOut","effects","isPatternOrGradient","getHoverColor","numbers","colors","applyAnimationsDefaults","defaults","name","applyLayoutsDefaults","intlCache","getNumberFormat","locale","cacheKey","formatter","formatNumber","num","formatters","tickValue","ticks","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","remain","Ticks","applyScaleDefaults","_ctx","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","context","ctx","targetScope","targetName","scopeObject","targetScopeObject","privateName","local","appliers","apply","toFontString","font","_measureText","data","gc","longest","string","textWidth","_longestText","arrayOfThings","cache","jlen","thing","nestedThing","gcLen","_alignPixel","chart","pixel","width","devicePixelRatio","halfWidth","clearCanvas","canvas","drawPoint","drawPointLegend","xOffset","yOffset","size","cornerRadius","xOffsetW","yOffsetW","style","rotation","radius","rad","_isPointInArea","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","mode","midpoint","_bezierCurveTo","setRenderOpts","opts","decorateText","line","metrics","top","bottom","yDecoration","drawBackdrop","oldColor","renderText","text","lines","stroke","addRoundedRectPath","rect","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","resolve","inputs","info","cacheable","_addGrace","minmax","grace","beginAtZero","change","keepZero","add","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","_cached","_resolveWithPrefixes","getKeysFromAllScopes","storage","_attachContext","proxy","subProxy","descriptorDefaults","receiver","_resolveWithContext","_scriptable","_indexable","_allKeys","readKey","prefix","needsSubResolver","_proxy","_context","_subProxy","_resolveScriptable","_resolveArray","getValue","_stack","createSubResolver","isIndexable","arr","resolver","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","getValueAxis","indexAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","loop","controlPoints","prev","_isDomSupported","_getParentNode","domNode","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","getStyle","el","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","getCanvasPosition","touches","offsetX","offsetY","box","getRelativePosition","event","currentDevicePixelRatio","borderBox","paddings","borders","height","getContainerSize","maxWidth","maxHeight","container","containerStyle","containerBorder","containerPadding","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","supportsEventListenerOptions","passiveSupported","readUsedSize","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRightToLeftAdapter","rectX","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","restoreTextDirection","propertyFn","normalizeSegment","getSegment","segment","bounds","startBound","endBound","between","normalize","_boundSegment","compare","inside","subStart","prevValue","startIsBefore","endIsBefore","shouldStart","shouldStop","_boundSegments","segments","sub","findStartAndEnd","solidSegments","cur","_computeSegments","segmentOptions","splitByStyles","completeLoop","doSplitByStyles","chartContext","baseStyle","readStyle","datasetIndex","prevStyle","addStyle","st","dir","styleChanged","replacer","getSizeForArea","scale","chartArea","field","getDatasetArea","getDatasetClipArea","clip","Animator","anims","date","callbacks","numSteps","remaining","draw","charts","cb","acc","animator","transparent","interpolators","factor","c0","Animation","cfg","currentValue","elapsed","duration","promises","rej","resolved","Animations","config","animationOptions","animatedProps","option","newOptions","resolveTargetOptions","animations","awaitAll","running","animation","properties","anim","scaleClip","allowedOverflow","defaultClip","toClip","getSortedDatasetIndices","filterVisible","metasets","applyStack","stack","dsIndex","singleMode","otherValue","found","convertObjectDataToArray","iAxisKey","vAxisKey","adata","isStacked","stacked","getStackKey","indexScale","valueScale","getUserBounds","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","updateStacks","controller","parsed","iAxis","vAxis","itemStacks","visualValues","getFirstScaleId","scales","createDatasetContext","createDataContext","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","DatasetController","dataset","chooseId","xid","yid","rid","iid","vid","scaleID","_data","resetNewElements","stackChanged","oldStacked","scopeKeys","_stacked","sorted","isNotInOrderComparedToPrev","labels","singleScale","xAxisKey","yAxisKey","parsedValue","otherScale","otherMin","otherMax","_skip","elements","active","drawActiveElementsOnTop","elementType","sharing","transition","sharedOptions","firstOpts","previouslySharedOptions","includeOptions","arg1","arg2","numMeta","numData","move","removed","newCount","__publicField","getAllScaleValues","visibleMetas","computeMinSampleSize","curr","updateMinAndPrev","computeFitCategoryTraits","ruler","stackCount","thickness","computeFlexCategoryTraits","pixels","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","borderProps","setBorderSkipped","edge","parseEdge","swap","startEnd","orig","v2","setInflateAmount","inflateAmount","BarController","bars","reset","horizontal","vpixels","ipixels","dataIndex","currentParsed","iScaleValue","skipNull","indexScaleId","firstScaleAxisId","barThickness","baseValue","minBarLength","floating","length","head","startPixel","endPixel","halfGrid","maxBarThickness","center","axisCount","axisID","axisNumber","stackIndex","rects","LineController","_dataset","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","border","lastPoint","abstract","DateAdapterBase","members","adapters","binarySearch","metaset","intersect","_sorted","lookupMethod","evaluateInteractionItems","position","handler","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","includeInvisible","getNearestRadialItems","evaluationFunc","startAngle","endAngle","getNearestCartesianItems","distanceMetric","minDistance","inRange","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","buildLayoutBoxes","centerHorizontal","centerVertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","newWidth","newHeight","widthChanged","heightChanged","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","same","other","setBoxDims","placeBoxes","userPadding","layoutItem","minPadding","padding","availableWidth","availableHeight","verticalBoxes","horizontalBoxes","visibleVerticalBoxCount","total","BasePlatform","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","isNullOrEmpty","initCanvas","renderHeight","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","nodeListContains","nodeList","createAttachObserver","observer","entries","trigger","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","resize","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","releaseObserver","createProxyAndListen","DomPlatform","initial","proxies","_detectPlatform","Element","final","autoSkip","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","majorIndices","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","spacing","calculateSpacing","avgMajorSpacing","skip","offset","tickLength","maxScale","maxChart","evenMajorSpacing","getEvenSpacing","factors","majorStart","majorEnd","diff","reverseAlign","offsetFromEdge","getTicksLimit","ticksLength","maxTicksLimit","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","garbageCollect","caches","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","tick","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","raw","_userMin","_userMax","_suggestedMin","_suggestedMax","metas","sampleSize","samplingEnabled","reversePixels","numTicks","minRotation","maxRotation","labelRotation","tickWidth","maxLabelDiagonal","labelSizes","maxLabelWidth","maxLabelHeight","minSize","titleOpts","gridOpts","display","isHorizontal","titleHeight","widest","highest","tickPadding","angleRadians","cos","sin","labelHeight","labelWidth","isRotated","labelsBelowTicks","offsetLeft","offsetRight","paddingLeft","paddingRight","paddingTop","paddingBottom","widths","heights","widestLabelSize","highestLabelSize","label","tickFont","fontString","lineHeight","nestedLabel","valueAt","idx","decimal","optionTicks","rot","grid","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineWidth","lineColor","borderDash","borderDashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","mirror","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","halfCount","strokeColor","strokeWidth","tickTextAlign","backdrop","labelPadding","backgroundColor","drawLine","lastLineWidth","renderTextOptions","title","tz","gz","bz","fontSize","TypedRegistry","override","parentScope","isIChartComponent","registerDefaults","itemDefaults","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","typedRegistry","arg","reg","itemReg","registry","component","camelMethod","PluginService","hook","filter","descriptor","plugin","all","plugins","allPlugins","createDescriptors","previousDescriptors","localIds","getOpts","pluginOpts","getIndexAxis","datasetDefaults","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","datasetType","mainScope","resetCache","_scopeCache","keyLists","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","isScriptable","scriptable","indexable","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onAnimationProgress","getCanvas","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","Chart$1","_a","invalidatePlugins","userConfig","initialCanvas","existingChart","maintainAspectRatio","_aspectRatio","newSize","newRatio","scalesOptions","axisOptions","scaleOpts","updated","isRadial","scaleType","scaleClass","hasUpdated","datasets","newControllers","ControllerClass","datasetElementType","dataElementType","animsDisabled","_active","_lastEvent","existingEvents","newEvents","_hiddenIndices","changes","_dataChanges","datasetCount","makeSet","changeSet","noArea","layers","visible","platform","_add","_remove","detached","attached","enabled","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","eventFilter","Chart","setStyle","lineTo","getLineMethod","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","minY","maxY","lastY","pointIndex","drawX","truncX","_getSegmentMethod","_getInterpolationMethod","strokePathWithCache","path","strokePathDirect","segmentMethod","usePath2D","LineElement","_interpolate","interpolated","inRange$1","PointElement","mouseX","mouseY","borderWidth","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","enableBorderRadius","maxR","enableBorder","boundingRects","skipX","skipY","hasRadius","addNormalRectPath","inflateRect","amount","refRect","BarElement","borderColor","inner","outer","addRectPath","_segments","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","fillSource","_getEdge","_pointsFromSegments","boundary","linePoints","_createBoundaryLine","_loop","_shouldApplyFill","_resolveTarget","propagate","fill","visited","_decodeFill","parseFillOption","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","fillColor","clipVertical","clipHorizontal","clipY","lineLoop","clipX","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","_args","getBoxSize","labelOpts","boxHeight","boxWidth","itemsEqual","Legend","legendItems","labelFont","itemHeight","hitboxes","lineWidths","totalHeight","row","legendItem","_itemHeight","columnSizes","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","rtlHelper","hitbox","defaultColor","halfFontSize","cursor","drawLegendBox","drawOptions","centerX","centerY","yBoxTop","xBoxLeft","borderRadius","fillText","realX","fontLineHeight","calculateLegendItemHeight","titleFont","titlePadding","topPaddingPlusHalfFontSize","hitBox","lh","isListened","hoveredItem","sameItem","calculateItemWidth","calculateItemHeight","legendItemText","plugin_legend","legend","ci","usePointStyle","pointStyle","useBorderRadius","Title","textSize","fontOpts","createTitle","plugin_title","titleBlock","positioners","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","createTooltipItem","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","bodyLineHeight","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","caretSize","caretPadding","topLeft","topRight","bottomLeft","bottomRight","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","labelCount","tooltipItem","invokeCallbackWithFallback","Tooltip","beforeTitle","afterTitle","bodyItems","scoped","beforeFooter","afterFooter","labelColors","labelPointStyles","labelTextColors","positionAndSize","backgroundPoint","tooltipPoint","caretPosition","ptX","ptY","x3","y3","titleSpacing","labelColor","labelPointStyle","colorX","rtlColorX","yOffSet","colorY","outerX","innerX","bodySpacing","bodyAlign","displayColors","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","tooltipSize","animX","animY","opacity","hasTooltipContent","positionChanged","caretX","caretY","plugin_tooltip","addIfString","addedLabels","findOrAddLabel","_getLabelForValue","CategoryScale","added","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","setMin","setMax","minSign","maxSign","stepSize","numericGeneratorOptions","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","startExp","generateTicks","minExp","exp","significand","lastTick","LogarithmicScale","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","pointLabelOpts","additionalAngle","pointPosition","plFont","hLimits","vLimits","updateLimits","buildPointLabelItems","createPointLabelItem","itemOpts","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","isNotOverlapped","centerPointLabels","drawPointLabelBox","backdropColor","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","pointLabels","pathRadiusLine","circular","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","scaledDistance","pointLabel","distanceFromCenter","angleLines","INTERVALS","UNITS","sorter","parse","adapter","parser","isoWeekday","determineUnitForAutoTicks","minUnit","capacity","interval","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","timestamp","setMajorTicks","majorUnit","major","ticksFromTimestamps","TimeScale","_applyBounds","timeOpts","minor","weekday","hasWeekday","format","formats","fmt","minorFormat","majorFormat","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","displayFormats","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","defaultDatasetIdKey","reforwardRef","ref","setOptions","nextOptions","setLabels","currentData","nextLabels","setDatasets","nextDatasets","datasetIdKey","addedDatasets","nextDataset","currentDataset","cloneData","nextData","ChartComponent","redraw","fallbackContent","updateMode","canvasProps","canvasRef","useRef","chartRef","renderChart","destroyChart","useEffect","React","forwardRef","createTypedChart","registerables","Line","FinancialElement","low","high","open","close","OhlcElement","me","armLengthRatio","armLength","FinancialController","newParsedData","vscale","defaults$1","OhlcController","baseProperties","CandlestickElement","borderColors","CandlestickController","_assertThisInitialized","FORMATS","_adapters","toDate","parseISO","isValid","addMilliseconds","addSeconds","addMinutes","addHours","addDays","addWeeks","addMonths","addQuarters","addYears","differenceInMilliseconds","differenceInSeconds","differenceInMinutes","differenceInHours","differenceInDays","differenceInWeeks","differenceInMonths","differenceInQuarters","differenceInYears","startOfSecond","startOfMinute","startOfHour","startOfDay","startOfWeek","startOfMonth","startOfQuarter","startOfYear","endOfSecond","endOfMinute","endOfHour","endOfDay","endOfWeek","endOfMonth","endOfQuarter","endOfYear"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10]}