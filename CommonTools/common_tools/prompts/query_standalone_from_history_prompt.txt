## Instructions ##
Analyse la requête de l'utilisateur et met les résultats dans les variables nommées indiquées :

> ajoute une chaîne nommée `question` avec la requête de l'utilisateur fournie `telle quelle`.
> ajoute une chaîne nommée `modified_question` avec une chaine vide en valeur.

- Si un historique de conversation est fourni et que la requête de l'utilisateur fait explicitement ou implicitement référence à un élément présent dans l'historique de la conversation, ou que celui-ci contient des informations utiles pour mieux contextualiser la requête de l'utilisateur et la rendre complète sans besoin de l'historique. Fait attention à ce que l'utilisateur n'ait pas changé de sujet.
> ajoute un booléen : `has_contextual_info` : La valeur est `true` si ce qui précède est vrai, sinon `false`.
Exemple: la présence de ces termes indiquent possiblement une référence explicite à un élément précédent : 'elle, il, elles, ils, le, la, les, leur, leurs, celle-ci, celle-là, ceux-ci, celles-là, la 1ère, la dernière ...

- Réécrit la requête de l'utilisateur, dans la même langue, en supprimant tous les éléments inutiles de la requête, et, en intégrant, le cas échéent, toutes les informations nécessaires depuis l'historique de la conversation pour contextualiser la requête, et rendre la question autonome. Veille à ce que la requête réécrite reste centrée sur la requête courante de l'utilisateur.
> ajoute une chaîne : `question_with_context` avec comme valeur la question réécrite à partir de la demande ci-dessus, si `has_contextual_info`, sinon attribue-lui une chaîne vide.
Exemple: avec en requête: 'bof, et en compta?' et en historique: 'user: quels sont les formations RNCP en RH'. `question_with_context` vaudra : 'quelles sont les formations RNCP en comptabilité'
Exemple: avec en requête: 'compare les' et comme historique: 'user: quels formations X ?, assistant: formation 1, formation 2, formation 3.'. `question_with_context` vaudra : 'compare les formation 1, formation 2, formation 3 ?'

// - si le sujet n'est pas explicitement l'un des suivants : ['métier', 'certifieur', 'certification', 'diplôme', 'domaine']

//- Enfin, il va s'agir d'identifier la catégorie de la requête de l'utilisateur. Elle peut appartenir à l'une des catégories suivantes : `salutations`, `fin de conversation`, `à propos de studi (école ou entreprise)`, `à propos d'un emploi`, `à propos de formations`, `à propos de financements`, `autre` (tout ce qui ne peut être classé dans une des catégories précédentes).
//> ajoute une chaîne `question_type` avec la valeur correspondante parmi `[ 'formation', 'salutations', 'fin de conversation', 'école', 'emploi', 'financement', 'autre']`.
- Enfin, identifie la catégorie de la requête 'modified_question'. Elle peut appartenir à l'une des catégories suivantes : 
  - `salutations` : en cas de salutations en début de conversation. Attention : Uniquement si l'utilisateur ne fait aucune autre demande en sus des saluations.  
  - `fin_echange` : en cas de formule (sans autre question) mettant fin à la conversation (tel que : 'merci', 'parfait', ou 'au revoir'). Attention : Uniquement si l'utilisateur ne fait auncune autre demande en sus de signifier la fin de la conversation.
  - `autre` : dans tous les autres cas.
> ajoute une chaîne `question_type` avec la valeur correspondante parmi `[ 'salutations', 'fin_echange', 'autre']`.

## Requête de l'utilisateur  ##
{user_query}

{conversation_history}
